{"map":"{\"version\":3,\"sources\":[\"/Users/rimpo/Documents/react-graphql/react-graphql/client/src/Components/LaunchItem.js\",\"/Users/rimpo/Documents/react-graphql/react-graphql/client/src/Components/Launches.js\",\"/Users/rimpo/Documents/react-graphql/react-graphql/client/src/Components/Launch.js\",\"/Users/rimpo/Documents/react-graphql/react-graphql/client/src/App.js\",\"/Users/rimpo/Documents/react-graphql/react-graphql/client/src/serviceWorker.js\",\"/Users/rimpo/Documents/react-graphql/react-graphql/client/src/index.js\"],\"names\":[\"styles\",\"color\",\"backgroundColor\",\"fontWeight\",\"maxwidth\",\"LaunchItem\",\"_ref\",\"_ref$launch\",\"launch\",\"flight_number\",\"mission_name\",\"launch_date_local\",\"launch_year\",\"launch_success\",\"react_default\",\"a\",\"createElement\",\"className\",\"style\",\"classNames\",\"text-link\",\"text-danger\",\"react_router_dom\",\"to\",\"concat\",\"Launches_Query\",\"gql\",\"_templateObject\",\"Launches\",\"_Component\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"apply\",\"arguments\",\"inherits\",\"createClass\",\"key\",\"value\",\"react_apollo_esm\",\"query\",\"loading\",\"error\",\"data\",\"console\",\"log\",\"launches\",\"map\",\"Components_LaunchItem\",\"Component\",\"Launch_templateObject\",\"Launch\",\"props\",\"match\",\"params\",\"parseInt\",\"variables\",\"_data$launch\",\"_data$launch$rocket\",\"rocket\",\"rocket_id\",\"rocket_name\",\"rocket_type\",\"text-success\",\"client\",\"ApolloClient\",\"uri\",\"App\",\"href\",\"type\",\"data-toggle\",\"data-target\",\"aria-controls\",\"aria-expanded\",\"aria-label\",\"react_router\",\"exact\",\"path\",\"component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\nimport { Link } from 'react-router-dom';\\nimport classNames from 'classnames';\\n\\nvar styles = {\\n\\tcolor:'red',\\n\\tbackgroundColor:'black',\\n    fontWeight:'bold',\\n    maxwidth: 20\\n};\\n\\nconst LaunchItem= ({ launch: {flight_number, mission_name, launch_year, launch_date_local, launch_success}}) => (\\n    <div className=\\\"container\\\">\\n        <div className=\\\"card text-white bg-success mb-3\\\" style={styles}>\\n            <h4 className=\\\"card-header\\\">Mission:  \\n                <span className= {classNames({\\n                    'text-link': launch_success,\\n                    'text-danger': !launch_success\\n                })}\\n                >\\n                &nbsp; { mission_name }\\n                </span>\\n            </h4>\\n            <div className=\\\"card-header row\\\">\\n                <div className=\\\"col-md-9\\\">\\n                    <h5 className=\\\"card-title\\\">Date: { launch_date_local} </h5>\\n                </div>\\n                <div className=\\\"col-md-3\\\">\\n                    <Link to={`/launch/${flight_number}`} className=\\\"btn btn-info\\\">\\n                        Launch Details\\n                    </Link>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    \\n)\\n\\nexport default LaunchItem;\",\"import React, { Component } from 'react';\\nimport { Query } from 'react-apollo';\\nimport gql from 'graphql-tag';\\nimport LaunchItem from './LaunchItem';\\n\\nconst Launches_Query = gql`\\n    query LaunchesQuery {\\n        launches {\\n            flight_number\\n            mission_name\\n            launch_year\\n            launch_date_local\\n            launch_success\\n        }\\n    }\\n`;\\nexport class Launches extends Component {\\n    render() {\\n        return (\\n            <div>\\n                <h1>Launches</h1>\\n                <Query query={Launches_Query}>\\n                    {\\n                        ({ loading, error, data}) => {\\n                            if(loading) return <h4>Loading...</h4>\\n                            if(error) console.log(error);\\n                            console.log(data);\\n                            return <h1>\\n                                {\\n                                    data.launches.map(launch => (\\n                                        <LaunchItem key={launch.flight_number} launch={launch}/>\\n                                    ))\\n                                }\\n                            </h1>\\n                        }\\n                    }\\n                </Query>\\n            </div>\\n        )\\n    }\\n}\\n\\nexport default Launches;\",\"import React, { Component } from 'react';\\nimport { Query } from 'react-apollo';\\nimport gql from 'graphql-tag';\\nimport { Link } from 'react-router-dom';\\nimport classNames from 'classnames';\\n\\nconst Launches_Query = gql`\\n    query LaunchesQuery($flight_number: Int) {\\n        launch(flight_number: $flight_number) {\\n            flight_number\\n            mission_name\\n            launch_year\\n            launch_date_local\\n            launch_success\\n            rocket {\\n                rocket_id\\n                rocket_name\\n                rocket_type\\n            }\\n        }\\n    }\\n`;\\nexport class Launch extends Component {\\n    render() {\\n        let { flight_number } = this.props.match.params;\\n        flight_number = parseInt(flight_number);\\n        return (\\n            <div>\\n                <h1>Launches</h1>\\n                <Query query={Launches_Query} variables={{flight_number}}>\\n                    {\\n                        ({loading, error, data}) => {\\n                            if(loading) return <h4>Loading...</h4>\\n                            if(error) console.log(\\\"error is\\\",error);\\n                            console.log(data);\\n\\n                            const { \\n                                    mission_name, \\n                                    flight_number, \\n                                    launch_year, \\n                                    launch_success, \\n                                    rocket: {\\n                                        rocket_id, \\n                                        rocket_name, \\n                                        rocket_type\\n                                    }\\n                                } = data.launch;\\n                            return <div>\\n                                <h4 className=\\\"display-4 my-3\\\">\\n                                    <span className=\\\"text-dark\\\">Mission:</span> {mission_name}\\n                                </h4>\\n                                <h4 className=\\\"mb-3\\\">Launch Details</h4>\\n                                <ul className=\\\"list-group\\\">\\n                                    <li className=\\\"list-group-item\\\">\\n                                        Flight Number: {flight_number}\\n                                    </li>\\n                                    <li className=\\\"list-group-item\\\">\\n                                        Launch Year: {launch_year}\\n                                    </li>\\n                                    <li className=\\\"list-group-item\\\">\\n                                        Launch Successful:{' '}\\n                                        <span\\n                                        className={classNames({\\n                                            'text-success': launch_success,\\n                                            'text-danger': !launch_success\\n                                        })}\\n                                        >\\n                                        {launch_success ? 'Yes' : 'No'}\\n                                        </span>\\n                                    </li>\\n                                </ul>\\n                                <h4 className=\\\"my-3\\\">Rocket Details</h4>\\n                                <ul className=\\\"list-group\\\">\\n                                    <li className=\\\"list-group-item\\\">Rocket ID: {rocket_id}</li>\\n                                    <li className=\\\"list-group-item\\\">\\n                                        Rocket Name: {rocket_name}\\n                                    </li>\\n                                    <li className=\\\"list-group-item\\\">\\n                                        Rocket Type: {rocket_type}\\n                                    </li>\\n                                </ul>\\n                                <hr />\\n                                <Link to=\\\"/\\\" className=\\\"btn btn-secondary\\\">\\n                                    Back\\n                                </Link>\\n                            </div>\\n                        }\\n                    }\\n                    \\n                </Query>\\n            </div>\\n        )\\n    }\\n}\\n\\nexport default Launch;\",\"import React, { Component } from 'react';\\nimport ApolloClient from 'apollo-boost';\\nimport { ApolloProvider } from 'react-apollo';\\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\\n//import Courses from './Courses';\\nimport './App.css';\\nimport Launches from './Components/Launches';\\nimport Launch from './Components/Launch';\\n\\nconst client = new ApolloClient({\\n  uri: '/graphql'\\n})\\n\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <ApolloProvider client ={client}>\\n        <Router>\\n          <nav className=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n            <a className=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\\n            <button className=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor02\\\" aria-controls=\\\"navbarColor02\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n              <span className=\\\"navbar-toggler-icon\\\"></span>\\n            </button>\\n\\n            {/* <div className=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor02\\\">\\n              <ul className=\\\"navbar-nav mr-auto\\\">\\n                <li className=\\\"nav-item active\\\">\\n                  <a className=\\\"nav-link\\\" href=\\\"#\\\">Home <span className=\\\"sr-only\\\">(current)</span></a>\\n                </li>\\n                <li className=\\\"nav-item\\\">\\n                  <a className=\\\"nav-link\\\" href=\\\"#\\\">Features</a>\\n                </li>\\n                <li className=\\\"nav-item\\\">\\n                  <a className=\\\"nav-link\\\" href=\\\"#\\\">Pricing</a>\\n                </li>\\n                <li className=\\\"nav-item\\\">\\n                  <a className=\\\"nav-link\\\" href=\\\"#\\\">About</a>\\n                </li>\\n              </ul>\\n            </div> */}\\n          </nav>\\n          <Route exact path='/' component = {Launches} />\\n          <Route exact path='/launch/:flight_number' component = {Launch} />\\n        </Router>\\n      </ApolloProvider>\\n    )\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{52:function(e,a,n){e.exports=n(74)},57:function(e,a,n){},58:function(e,a,n){},74:function(e,a,n){\"use strict\";n.r(a);var t=n(1),r=n.n(t),c=n(44),l=n.n(c),s=(n(57),n(17)),o=n(18),i=n(22),u=n(19),m=n(23),h=n(50),b=n(21),d=n(20),g=n(14),p=(n(58),n(29)),E=n(16),f=n.n(E),v=n(32),_=n.n(v),N={color:\"red\",backgroundColor:\"black\",fontWeight:\"bold\",maxwidth:20},y=function(e){var a=e.launch,n=a.flight_number,t=a.mission_name,c=(a.launch_year,a.launch_date_local),l=a.launch_success;return r.a.createElement(\"div\",{className:\"container\"},r.a.createElement(\"div\",{className:\"card text-white bg-success mb-3\",style:N},r.a.createElement(\"h4\",{className:\"card-header\"},\"Mission:\",r.a.createElement(\"span\",{className:_()({\"text-link\":l,\"text-danger\":!l})},\"\\xa0 \",t)),r.a.createElement(\"div\",{className:\"card-header row\"},r.a.createElement(\"div\",{className:\"col-md-9\"},r.a.createElement(\"h5\",{className:\"card-title\"},\"Date: \",c,\" \")),r.a.createElement(\"div\",{className:\"col-md-3\"},r.a.createElement(d.b,{to:\"/launch/\".concat(n),className:\"btn btn-info\"},\"Launch Details\")))))};function k(){var e=Object(p.a)([\"\\n    query LaunchesQuery {\\n        launches {\\n            flight_number\\n            mission_name\\n            launch_year\\n            launch_date_local\\n            launch_success\\n        }\\n    }\\n\"]);return k=function(){return e},e}var j=f()(k()),O=function(e){function a(){return Object(s.a)(this,a),Object(i.a)(this,Object(u.a)(a).apply(this,arguments))}return Object(m.a)(a,e),Object(o.a)(a,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(\"h1\",null,\"Launches\"),r.a.createElement(b.b,{query:j},function(e){var a=e.loading,n=e.error,t=e.data;return a?r.a.createElement(\"h4\",null,\"Loading...\"):(n&&console.log(n),console.log(t),r.a.createElement(\"h1\",null,t.launches.map(function(e){return r.a.createElement(y,{key:e.flight_number,launch:e})})))}))}}]),a}(t.Component);function w(){var e=Object(p.a)([\"\\n    query LaunchesQuery($flight_number: Int) {\\n        launch(flight_number: $flight_number) {\\n            flight_number\\n            mission_name\\n            launch_year\\n            launch_date_local\\n            launch_success\\n            rocket {\\n                rocket_id\\n                rocket_name\\n                rocket_type\\n            }\\n        }\\n    }\\n\"]);return w=function(){return e},e}var x=f()(w()),L=function(e){function a(){return Object(s.a)(this,a),Object(i.a)(this,Object(u.a)(a).apply(this,arguments))}return Object(m.a)(a,e),Object(o.a)(a,[{key:\"render\",value:function(){var e=this.props.match.params.flight_number;return e=parseInt(e),r.a.createElement(\"div\",null,r.a.createElement(\"h1\",null,\"Launches\"),r.a.createElement(b.b,{query:x,variables:{flight_number:e}},function(e){var a=e.loading,n=e.error,t=e.data;if(a)return r.a.createElement(\"h4\",null,\"Loading...\");n&&console.log(\"error is\",n),console.log(t);var c=t.launch,l=c.mission_name,s=c.flight_number,o=c.launch_year,i=c.launch_success,u=c.rocket,m=u.rocket_id,h=u.rocket_name,b=u.rocket_type;return r.a.createElement(\"div\",null,r.a.createElement(\"h4\",{className:\"display-4 my-3\"},r.a.createElement(\"span\",{className:\"text-dark\"},\"Mission:\"),\" \",l),r.a.createElement(\"h4\",{className:\"mb-3\"},\"Launch Details\"),r.a.createElement(\"ul\",{className:\"list-group\"},r.a.createElement(\"li\",{className:\"list-group-item\"},\"Flight Number: \",s),r.a.createElement(\"li\",{className:\"list-group-item\"},\"Launch Year: \",o),r.a.createElement(\"li\",{className:\"list-group-item\"},\"Launch Successful:\",\" \",r.a.createElement(\"span\",{className:_()({\"text-success\":i,\"text-danger\":!i})},i?\"Yes\":\"No\"))),r.a.createElement(\"h4\",{className:\"my-3\"},\"Rocket Details\"),r.a.createElement(\"ul\",{className:\"list-group\"},r.a.createElement(\"li\",{className:\"list-group-item\"},\"Rocket ID: \",m),r.a.createElement(\"li\",{className:\"list-group-item\"},\"Rocket Name: \",h),r.a.createElement(\"li\",{className:\"list-group-item\"},\"Rocket Type: \",b)),r.a.createElement(\"hr\",null),r.a.createElement(d.b,{to:\"/\",className:\"btn btn-secondary\"},\"Back\"))}))}}]),a}(t.Component),C=new h.a({uri:\"/graphql\"}),q=function(e){function a(){return Object(s.a)(this,a),Object(i.a)(this,Object(u.a)(a).apply(this,arguments))}return Object(m.a)(a,e),Object(o.a)(a,[{key:\"render\",value:function(){return r.a.createElement(b.a,{client:C},r.a.createElement(d.a,null,r.a.createElement(\"nav\",{className:\"navbar navbar-expand-lg navbar-dark bg-dark\"},r.a.createElement(\"a\",{className:\"navbar-brand\",href:\"#\"},\"Navbar\"),r.a.createElement(\"button\",{className:\"navbar-toggler\",type:\"button\",\"data-toggle\":\"collapse\",\"data-target\":\"#navbarColor02\",\"aria-controls\":\"navbarColor02\",\"aria-expanded\":\"false\",\"aria-label\":\"Toggle navigation\"},r.a.createElement(\"span\",{className:\"navbar-toggler-icon\"}))),r.a.createElement(g.a,{exact:!0,path:\"/\",component:O}),r.a.createElement(g.a,{exact:!0,path:\"/launch/:flight_number\",component:L})))}}]),a}(t.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(r.a.createElement(q,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[52,1,2]]]);","extractedComments":[]}