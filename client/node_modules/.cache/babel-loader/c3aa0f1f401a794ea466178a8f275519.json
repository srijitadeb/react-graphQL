{"ast":null,"code":"import _classCallCheck from \"/Users/rimpo/Documents/react-graphql/react-graphql/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rimpo/Documents/react-graphql/react-graphql/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rimpo/Documents/react-graphql/react-graphql/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rimpo/Documents/react-graphql/react-graphql/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rimpo/Documents/react-graphql/react-graphql/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/rimpo/Documents/react-graphql/react-graphql/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/rimpo/Documents/react-graphql/react-graphql/client/src/Components/Launch.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query LaunchesQuery($flight_number: Int) {\\n        launch(flight_number: $flight_number) {\\n            flight_number\\n            mission_name\\n            launch_year\\n            launch_date_local\\n            launch_success\\n            rocket {\\n                rocket_id\\n                rocket_name\\n                rocket_type\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nvar Launches_Query = gql(_templateObject());\nexport var Launch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Launch, _Component);\n\n  function Launch() {\n    _classCallCheck(this, Launch);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Launch).apply(this, arguments));\n  }\n\n  _createClass(Launch, [{\n    key: \"render\",\n    value: function render() {\n      var flight_number = this.props.match.params.flight_number;\n      flight_number = parseInt(flight_number);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Launches\"), React.createElement(Query, {\n        query: Launches_Query,\n        variables: {\n          flight_number: flight_number\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n        if (loading) return React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"Loading...\");\n        if (error) console.log(\"error is\", error);\n        console.log(data);\n        var _data$launch = data.launch,\n            mission_name = _data$launch.mission_name,\n            flight_number = _data$launch.flight_number,\n            launch_year = _data$launch.launch_year,\n            launch_success = _data$launch.launch_success,\n            _data$launch$rocket = _data$launch.rocket,\n            rocket_id = _data$launch$rocket.rocket_id,\n            rocket_name = _data$launch$rocket.rocket_name,\n            rocket_type = _data$launch$rocket.rocket_type;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          className: \"display-4 my-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"text-dark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"Mission:\"), \" \", mission_name), React.createElement(\"h4\", {\n          className: \"mb-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"Launch Details\"), React.createElement(\"ul\", {\n          className: \"list-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"Flight Number: \", flight_number), React.createElement(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Launch Year: \", launch_year), React.createElement(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Launch Successful:\", ' ', React.createElement(\"span\", {\n          className: classNames({\n            'text-success': launch_success,\n            'text-danger': !launch_success\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, launch_success ? 'Yes' : 'No'))));\n      }));\n    }\n  }]);\n\n  return Launch;\n}(Component);\nexport default Launch;","map":{"version":3,"sources":["/Users/rimpo/Documents/react-graphql/react-graphql/client/src/Components/Launch.js"],"names":["React","Component","Query","gql","Link","classNames","Launches_Query","Launch","flight_number","props","match","params","parseInt","loading","error","data","console","log","launch","mission_name","launch_year","launch_success","rocket","rocket_id","rocket_name","rocket_type"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,IAAMC,cAAc,GAAGH,GAAH,mBAApB;AAgBA,WAAaI,MAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACa;AAAA,UACCC,aADD,GACmB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADpC,CACCH,aADD;AAELA,MAAAA,aAAa,GAAGI,QAAQ,CAACJ,aAAD,CAAxB;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEF,cAAd;AAA8B,QAAA,SAAS,EAAE;AAACE,UAAAA,aAAa,EAAbA;AAAD,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,gBAA4B;AAAA,YAA1BK,OAA0B,QAA1BA,OAA0B;AAAA,YAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,YAAVC,IAAU,QAAVA,IAAU;AACxB,YAAGF,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACZ,YAAGC,KAAH,EAAUE,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBH,KAAvB;AACVE,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAHwB,2BAehBA,IAAI,CAACG,MAfW;AAAA,YAMhBC,YANgB,gBAMhBA,YANgB;AAAA,YAOhBX,aAPgB,gBAOhBA,aAPgB;AAAA,YAQhBY,WARgB,gBAQhBA,WARgB;AAAA,YAShBC,cATgB,gBAShBA,cATgB;AAAA,+CAUhBC,MAVgB;AAAA,YAWZC,SAXY,uBAWZA,SAXY;AAAA,YAYZC,WAZY,uBAYZA,WAZY;AAAA,YAaZC,WAbY,uBAaZA,WAbY;AAgBxB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACH;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,OACiDN,YADjD,CADG,EAIH;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJG,EAKH;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACoBX,aADpB,CADJ,EAII;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACkBY,WADlB,CAJJ,EAOI;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACuB,GADvB,EAEI;AACA,UAAA,SAAS,EAAEf,UAAU,CAAC;AAClB,4BAAgBgB,cADE;AAElB,2BAAe,CAACA;AAFE,WAAD,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMCA,cAAc,GAAG,KAAH,GAAW,IAN1B,CAFJ,CAPJ,CALG,CAAP;AAyBH,OA3CT,CAFJ,CADJ;AAoDH;AAxDL;;AAAA;AAAA,EAA4BpB,SAA5B;AA2DA,eAAeM,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst Launches_Query = gql`\n    query LaunchesQuery($flight_number: Int) {\n        launch(flight_number: $flight_number) {\n            flight_number\n            mission_name\n            launch_year\n            launch_date_local\n            launch_success\n            rocket {\n                rocket_id\n                rocket_name\n                rocket_type\n            }\n        }\n    }\n`;\nexport class Launch extends Component {\n    render() {\n        let { flight_number } = this.props.match.params;\n        flight_number = parseInt(flight_number);\n        return (\n            <div>\n                <h1>Launches</h1>\n                <Query query={Launches_Query} variables={{flight_number}}>\n                    {\n                        ({loading, error, data}) => {\n                            if(loading) return <h4>Loading...</h4>\n                            if(error) console.log(\"error is\",error);\n                            console.log(data);\n\n                            const { \n                                    mission_name, \n                                    flight_number, \n                                    launch_year, \n                                    launch_success, \n                                    rocket: {\n                                        rocket_id, \n                                        rocket_name, \n                                        rocket_type\n                                    }\n                                } = data.launch;\n                            return <div>\n                                <h4 className=\"display-4 my-3\">\n                                    <span className=\"text-dark\">Mission:</span> {mission_name}\n                                </h4>\n                                <h4 className=\"mb-3\">Launch Details</h4>\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">\n                                        Flight Number: {flight_number}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Launch Year: {launch_year}\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        Launch Successful:{' '}\n                                        <span\n                                        className={classNames({\n                                            'text-success': launch_success,\n                                            'text-danger': !launch_success\n                                        })}\n                                        >\n                                        {launch_success ? 'Yes' : 'No'}\n                                        </span>\n                                    </li>\n                                </ul>\n                            </div>\n                        }\n                    }\n                    \n                </Query>\n            </div>\n        )\n    }\n}\n\nexport default Launch;"]},"metadata":{},"sourceType":"module"}